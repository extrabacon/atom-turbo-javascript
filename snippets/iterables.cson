".source.js, .source.ts, .source.tsx":
  "sequence":
    prefix: "seq"
    body: """
    [...Array(${1:length}).keys()]${0}
    """
  "forEach loop":
    prefix: "fe"
    body: """
    ${1:iterable}.forEach((${2:item}) => {
    \t${0}
    });
    """
  "chain forEach":
    prefix: ".fe"
    body: ".forEach((${1:item}) => {${0}})"
  "map":
    prefix: "map"
    body: """
    ${1:iterable}.map((${2:item}) => {
    \t${0}
    });
    """
  "chain map":
    prefix: ".map"
    body: ".map((${1:item}) => {${0}})"
  "reduce":
    prefix: "reduce"
    body: """
    ${1:iterable}.reduce((${2:previous}, ${3:current}) => {
    \t${0}
    }${4:, initial});
    """
  "chain reduce":
    prefix: ".reduce"
    body: ".reduce((${1:previous}, ${2:current}) => {${0}}${4:, initial})"
  "filter":
    prefix: "filter"
    body: """
    ${1:iterable}.filter((${2:item}) => {
    \t${0}
    });
    """
  "chain filter":
    prefix: ".filter"
    body: ".filter((${1:item}) => {${0}})"
  "find":
    prefix: "find"
    body: """
    ${1:iterable}.find((${2:item}) => {
    \t${0}
    });
    """
  "chain find":
    prefix: ".find"
    body: ".find((${1:item}) => {${0}})"
